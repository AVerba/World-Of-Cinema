{"version":3,"file":"static/js/395.5790ec78.chunk.js","mappings":"+LACA,EAA2B,uB,kBCA3B,EAA2B,2BAA3B,EAA8D,wBAA9D,EAA6F,uBAA7F,EAA2H,uBAA3H,EAA8J,4B,SCGjJA,EAAW,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAC1C,OACE,gBAAIC,UAAWC,EAAf,UACGF,GACC,gBACEC,UAAWC,EACXC,IAAG,yCAAoCH,GACvCI,IAAKN,KAGP,gBAAKG,UAAWC,EAAcC,I,6+TAAcC,IAAKN,KAEnD,iBAAKG,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,SAA6BJ,KAC7B,cAAGG,UAAWC,EAAd,SAAiCH,W,oCCRnCM,EACE,OADFA,EAEK,UAFLA,EAGM,WAHNA,EAIM,WAmDZ,EAhDa,WACX,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAASD,GAArC,eAAOI,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACRC,EAAWH,KACV,CAACA,IACJ,IAAMG,EAAa,SAAAC,GACjBP,EAAUL,GACVa,EAAAA,EAAAA,eACkBL,GACfM,MAAK,YAAe,IAAZZ,EAAW,EAAXA,KACPC,EAAQD,GACRG,EAAUL,MAEXe,OAAM,SAAAT,GACLC,EAASD,GACTD,EAAUL,OAGhB,OACE,gCACc,YAAXI,GAAuB,SAAC,IAAD,IAAkB,KAC9B,aAAXA,EAAwBY,EAAAA,OAAAA,QAAA,UAAkBV,EAAMW,UAAa,KAClD,aAAXb,GACC,SAACc,EAAA,EAAD,WACE,eAAItB,UAAWC,EAAf,SACGK,EAAKiB,OAAS,EACbjB,EAAKkB,KAAI,SAAAC,GAAI,OACX,SAAC7B,EAAD,CAEEG,QAAS0B,EAAKC,aACd5B,UAAW2B,EAAK3B,UAChBD,KAAM4B,EAAK5B,MAHN4B,EAAKT,QAOd,cAAGhB,UAAU,YAAb,4CAIJ","sources":["webpack://goit-react-hw-05-movies/./src/pages/Cast/Cast.module.css?cfbb","webpack://goit-react-hw-05-movies/./src/pages/Cast/CastItem/CastItem.module.css?72ab","pages/Cast/CastItem/CastItem.jsx","pages/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__DVXPY\"};","// extracted by mini-css-extract-plugin\nexport default {\"castItem\":\"CastItem_castItem__pKWwh\",\"photo\":\"CastItem_photo__q4Zdz\",\"info\":\"CastItem_info__VSOYR\",\"name\":\"CastItem_name__M1Qmt\",\"character\":\"CastItem_character__5vCkS\"};","import styles from './CastItem.module.css';\nimport propTypes from 'prop-types';\nimport NoPhoto from '../../../components/UI/NoPhoto.png';\n\nexport const CastItem = ({ name, character, profile }) => {\n  return (\n    <li className={styles.castItem}>\n      {profile ? (\n        <img\n          className={styles.photo}\n          src={`https://themoviedb.org/t/p/w185${profile}`}\n          alt={name}\n        />\n      ) : (\n        <img className={styles.photo} src={NoPhoto} alt={name} />\n      )}\n      <div className={styles.info}>\n        <h4 className={styles.name}>{name}</h4>\n        <p className={styles.character}>{character}</p>\n      </div>\n    </li>\n  );\n};\nCastItem.propTypes = {\n  name: propTypes.string.isRequired,\n  character: propTypes.string.isRequired,\n  profile: propTypes.string,\n};\n","import styles from './Cast.module.css';\nimport { useState, useEffect } from 'react';\nimport movieAPI from '../../services/serviceApi';\nimport { CastItem } from './CastItem';\nimport { Container } from '../../components/Container/Container';\nimport ImageLoader from '../../components/UI/Loader/Loader';\nimport { Notify } from 'notiflix';\nimport propTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [error, setError] = useState(null);\n  const { movieID } = useParams();\n\n  useEffect(() => {\n    searchCast(movieID);\n  }, [movieID]);\n  const searchCast = id => {\n    setStatus(Status.PENDING);\n    movieAPI\n      .fetchCastMovie(movieID)\n      .then(({ cast }) => {\n        setCast(cast);\n        setStatus(Status.RESOLVED);\n      })\n      .catch(error => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      });\n  };\n  return (\n    <>\n      {status === 'pending' ? <ImageLoader /> : null}\n      {status === 'rejected' ? Notify.warning(`${error.message}`) : null}\n      {status === 'resolved' ? (\n        <Container>\n          <ul className={styles.castList}>\n            {cast.length > 0 ? (\n              cast.map(item => (\n                <CastItem\n                  key={item.id}\n                  profile={item.profile_path}\n                  character={item.character}\n                  name={item.name}\n                />\n              ))\n            ) : (\n              <p className=\"noCredits\">Sorry no credits available</p>\n            )}\n          </ul>\n        </Container>\n      ) : null}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["CastItem","name","character","profile","className","styles","src","alt","Status","useState","cast","setCast","status","setStatus","error","setError","movieID","useParams","useEffect","searchCast","id","movieAPI","then","catch","Notify","message","Container","length","map","item","profile_path"],"sourceRoot":""}