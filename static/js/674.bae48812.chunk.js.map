{"version":3,"file":"static/js/674.bae48812.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieItem/MovieItem.module.css?427c","components/MovieList/MovieItem/MovieItem.jsx","components/MovieList/MovieList.jsx","pages/HomePage/HomePage.jsx","services/settings.js","services/serviceApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MovieList_movieList__my-cM\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MovieItem_item__2i96U\",\"link\":\"MovieItem_link__aU3NQ\",\"title\":\"MovieItem_title__VyjTF\",\"itemImage\":\"MovieItem_itemImage__Z3Jes\"};","import styles from './MovieItem.module.css';\nimport propTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport commonImage from '../../UI/commonImage.png';\n\nexport const MovieItem = ({ movie }) => {\n  const location = useLocation();\n  const { id, poster_path, original_title } = movie;\n\n  return (\n    <li className={styles.item}>\n      <Link\n        to={`/movies/${id}`}\n        state={{ from: location }}\n        className={styles.link}\n      >\n        <div className={styles.poster}>\n          {poster_path !== null ? (\n            <picture>\n              <source\n                srcSet={`https://themoviedb.org/t/p/w500${poster_path}`}\n                media=\"(min-width: 1024px)\"\n              />\n              <source\n                srcSet={`https://themoviedb.org/t/p/w342${poster_path}`}\n                media=\"(min-width: 768px)\"\n              />\n              <img\n                alt={original_title}\n                className={styles.itemImage}\n                loading=\"lazy\"\n                src={`https://themoviedb.org/t/p/w342${poster_path}`}\n              />\n            </picture>\n          ) : (\n            <img\n              className={styles.itemImage}\n              src={commonImage}\n              alt=\"no poster\"\n              loading=\"lazy\"\n            />\n          )}\n        </div>\n        <div className={styles.title}>\n          <h3 className={styles.title}>{original_title}</h3>\n        </div>\n      </Link>\n    </li>\n  );\n};\n\n// MovieItem.propTypes = {\n//   id: propTypes.number.isRequired,\n//   title: propTypes.string.isRequired,\n//   img: propTypes.string.isRequired,\n// };\n","import styles from './MovieList.module.css';\nimport propTypes from 'prop-types';\nimport { MovieItem } from './MovieItem';\n\nexport const MovieList = ({ movies }) => {\n  return (\n    <ul className={styles.movieList}>\n      {movies.map(item => (\n        <MovieItem movie={item} />\n      ))}\n    </ul>\n  );\n};\n","import styles from './HomePage.module.css';\r\nimport propTypes from 'prop-types';\r\nimport { Container } from '../../components/Container/Container';\r\nimport { MovieList } from '../../components/MovieList';\r\nimport { useState, useEffect } from 'react';\r\nimport MovieAPI from '../../services/serviceApi';\r\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\r\n\r\nimport { Notify } from 'notiflix';\r\nimport ImageLoader from '../../components/UI/Loader/Loader';\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nconst HomePage = () => {\r\n  const [trendingMovies, setTrendingMovie] = useState([]);\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [error, setError] = useState(null);\r\n  useEffect(() => {\r\n    setStatus(Status.PENDING);\r\n    fetchMovies();\r\n  }, []);\r\n  useEffect(() => {\r\n    // console.log(trendingMovies);\r\n  }, [trendingMovies]);\r\n\r\n  const fetchMovies = () => {\r\n    MovieAPI.fetchTrendsMovies()\r\n      .then(({ results }) => {\r\n        const composedMovieData = results.map(\r\n          ({ id, original_title, poster_path }) => ({\r\n            id,\r\n            original_title,\r\n            poster_path,\r\n          })\r\n        );\r\n        setTrendingMovie(composedMovieData);\r\n        setStatus(Status.RESOLVED);\r\n      })\r\n      .catch(error => {\r\n        setError(error);\r\n        setStatus(Status.REJECTED);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {status === 'pending' ? <ImageLoader /> : null}\r\n      {status === 'rejected' ? Notify.warning(`${error.message}`) : null}\r\n      {status === 'resolved' ? <MovieList movies={trendingMovies} /> : null}\r\n    </Container>\r\n  );\r\n};\r\nexport default HomePage;\r\n","export const apiSettings = {\n  API_KEY: 'eb148ce88b4706c0ea240b2da392d66f',\n  BASE_URL: 'https://api.themoviedb.org/3',\n};\n","import { apiSettings } from './settings';\nimport { Notify } from 'notiflix';\n\nconst { BASE_URL, API_KEY } = apiSettings;\n\nconst fetchSearchMovies = async query => {\n  const response = await fetch(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}&page=${1}`\n  );\n\n  if (response.ok) {\n    return response.json();\n  }\n  return Notify.failure(`Sorry, but not found movie like ${query}`);\n};\nconst fetchTrendsMovies = async () => {\n  const response = await fetch(\n    `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`\n  );\n  if (response.ok) {\n    return response.json();\n  }\n};\nconst fetchMovieById = async id => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  if (response.ok) {\n    return response.json();\n  }\n};\n\nconst fetchCastMovie = async id => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  if (response.ok) {\n    return response.json();\n  }\n  return Notify.failure('Oops, an error occurred');\n};\n\nconst fetchReviewsMovies = async id => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  if (response.ok) {\n    return response.json();\n  }\n  return Notify.failure('Oops, an error occurred');\n};\nexport const fetchMovieDetails = async id => {\n  const response = await fetch(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n  if (response.ok) {\n    return response.json();\n  }\n  return Notify.failure('Oops, an error occurred');\n};\n\nconst api = {\n  fetchSearchMovies,\n  fetchTrendsMovies,\n  fetchMovieById,\n  fetchMovieDetails,\n  fetchReviewsMovies,\n  fetchCastMovie,\n};\n\nexport default api;\n"],"names":["MovieItem","movie","location","useLocation","id","poster_path","original_title","className","styles","to","state","from","srcSet","media","alt","loading","src","commonImage","MovieList","movies","map","item","Status","useState","trendingMovies","setTrendingMovie","status","setStatus","error","setError","useEffect","fetchMovies","MovieAPI","then","composedMovieData","results","catch","Container","Notify","message","apiSettings","BASE_URL","API_KEY","fetchSearchMovies","query","fetch","response","ok","json","fetchTrendsMovies","fetchMovieById","fetchCastMovie","fetchReviewsMovies","fetchMovieDetails"],"sourceRoot":""}