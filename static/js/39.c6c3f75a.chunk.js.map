{"version":3,"file":"static/js/39.c6c3f75a.chunk.js","mappings":"6LACA,EAA8B,6B,kBCA9B,GAAgB,WAAa,+BAA+B,SAAW,6BAA6B,OAAS,4B,gnHCGhGA,EAAa,SAAC,GAA0C,EAAxCC,OAAyC,IAAjCC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OAKtD,OACE,gBAAIC,UAAWC,EAAAA,WAAf,WACE,iBAAKD,UAAWC,EAAAA,SAAhB,UACGF,GACC,gBACEC,UAAWC,EAAAA,OACXC,IAAG,yCAAoCH,GACvCI,IAAKL,EACLM,QAZY,SAAAC,GACpBA,EAAMC,OAAOJ,IAAMK,MAcb,gBAAKP,UAAWC,EAAAA,OAAeC,IAAKK,EAASJ,IAAKL,IAEnDA,GACC,eAAIE,UAAWC,EAAAA,KAAf,SAA6BH,KAE7B,eAAIE,UAAWC,EAAAA,KAAf,2BAIJ,cAAGD,UAAWC,EAAAA,OAAd,SAA8BJ,Q,oCCnB9BW,EACE,OADFA,EAEK,UAFLA,EAGM,WAHNA,EAIM,WA0DZ,EAvDgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAASD,GAArC,eAAOI,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACRC,EAAcH,GACdH,EAAUL,KACT,CAACQ,IACJ,IAAMG,EAAgB,SAAAH,GACpBI,EAAAA,EAAAA,mBACsBJ,GACnBK,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACPX,EAAWW,GACXT,EAAUL,MAEXe,OAAM,SAAAT,GACLC,EAASD,GACTD,EAAUL,OAGhB,OACE,gCACc,YAAXI,GAAuB,SAAC,IAAD,IAAkB,KAC9B,aAAXA,EAAwBY,EAAAA,OAAAA,QAAA,UAAkBV,EAAMW,UAAa,KAClD,aAAXb,GACC,SAACc,EAAA,EAAD,WACE,eAAI1B,UAAWC,EAAf,SACGS,EAAQiB,OAAS,EAChBjB,EAAQkB,KAAI,SAAAC,GAAI,OACd,SAAClC,EAAD,CAEEI,OAAQ8B,EAAKC,eAAeC,YAC5BjC,SAAU+B,EAAKC,eAAehC,SAC9BD,QAASgC,EAAKhC,QACdgC,KAAMA,GAJDA,EAAKG,QAQd,gBAAKhC,UAAU,YAAf,UAEE,wGAQN","sources":["webpack://goit-react-hw-05-movies/./src/pages/Reviews/Reviews.module.css?9a3e","webpack://goit-react-hw-05-movies/./src/pages/Reviews/ReviewItem/ReviewItem.module.css?5c88","pages/Reviews/ReviewItem/ReviewItem.jsx","pages/Reviews/Reviews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewsList\":\"Reviews_reviewsList__ARYCQ\"};","// extracted by mini-css-extract-plugin\nexport default {\"reviewItem\":\"ReviewItem_reviewItem__Dp0SE\",\"userInfo\":\"ReviewItem_userInfo__hlH9-\",\"avatar\":\"ReviewItem_avatar__MqASv\"};","import styles from './ReviewItem.module.css';\nimport propTypes from 'prop-types';\nimport NoPhoto from '../../../components/UI/commonUser.png';\n\nexport const ReviewItem = ({ author, content, username, avatar }) => {\n  const addDefaultSrc = event => {\n    event.target.src = NoPhoto;\n  };\n\n  return (\n    <li className={styles.reviewItem}>\n      <div className={styles.userInfo}>\n        {avatar ? (\n          <img\n            className={styles.avatar}\n            src={`https://themoviedb.org/t/p/w185${avatar}`}\n            alt={username}\n            onError={addDefaultSrc}\n          />\n        ) : (\n          <img className={styles.avatar} src={NoPhoto} alt={username} />\n        )}\n        {username ? (\n          <h4 className={styles.name}>{username}</h4>\n        ) : (\n          <h4 className={styles.name}>Anonymous</h4>\n        )}\n      </div>\n\n      <p className={styles.review}>{content}</p>\n    </li>\n  );\n};\nReviewItem.propTypes = {\n  avatar_path: propTypes.string,\n  username: propTypes.string,\n  content: propTypes.string.isRequired,\n};\n","import styles from './Reviews.module.css';\nimport { useState, useEffect } from 'react';\nimport movieAPI from '../../services/serviceApi';\nimport { ReviewItem } from './ReviewItem';\nimport { Container } from '../../components/Container/Container';\nimport ImageLoader from '../../components/UI/Loader/Loader';\nimport { Notify } from 'notiflix';\nimport propTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [error, setError] = useState(null);\n  const { movieID } = useParams();\n\n  useEffect(() => {\n    searchReviews(movieID);\n    setStatus(Status.PENDING);\n  }, [movieID]);\n  const searchReviews = movieID => {\n    movieAPI\n      .fetchReviewsMovies(movieID)\n      .then(({ results }) => {\n        setReviews(results);\n        setStatus(Status.RESOLVED);\n      })\n      .catch(error => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      });\n  };\n  return (\n    <>\n      {status === 'pending' ? <ImageLoader /> : null}\n      {status === 'rejected' ? Notify.warning(`${error.message}`) : null}\n      {status === 'resolved' ? (\n        <Container>\n          <ul className={styles.reviewsList}>\n            {reviews.length > 0 ? (\n              reviews.map(item => (\n                <ReviewItem\n                  key={item.id}\n                  avatar={item.author_details.avatar_path}\n                  username={item.author_details.username}\n                  content={item.content}\n                  item={item}\n                />\n              ))\n            ) : (\n              <div className=\"noReviews\">\n                {/*<img width=\"180px\" src={noCredits} alt=\"no credits\" />*/}\n                <p>\n                  Sorry, we didn't find any reviews for this movie. You can be\n                  the first\n                </p>\n              </div>\n            )}\n          </ul>\n        </Container>\n      ) : null}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["ReviewItem","author","content","username","avatar","className","styles","src","alt","onError","event","target","NoPhoto","Status","useState","reviews","setReviews","status","setStatus","error","setError","movieID","useParams","useEffect","searchReviews","movieAPI","then","results","catch","Notify","message","Container","length","map","item","author_details","avatar_path","id"],"sourceRoot":""}