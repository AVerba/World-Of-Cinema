{"version":3,"file":"static/js/674.40a3f023.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieItem/MovieItem.module.css?427c","components/MovieList/MovieItem/MovieItem.jsx","components/MovieList/MovieList.jsx","pages/HomePage/HomePage.jsx","services/settings.js","services/serviceApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MovieList_movieList__my-cM\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MovieItem_item__2i96U\",\"link\":\"MovieItem_link__aU3NQ\",\"title\":\"MovieItem_title__VyjTF\",\"itemImage\":\"MovieItem_itemImage__Z3Jes\"};","import styles from './MovieItem.module.css';\nimport propTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport commonImage from '../../UI/commonImage.png';\n\nexport const MovieItem = ({ movie }) => {\n  const location = useLocation();\n  const { id, poster_path, original_title } = movie;\n\n  return (\n    <li className={styles.item}>\n      <Link\n        to={`/movies/${id}`}\n        state={{ from: location }}\n        className={styles.link}\n      >\n        <div className={styles.poster}>\n          {poster_path !== null ? (\n            <picture>\n              <source\n                srcSet={`https://themoviedb.org/t/p/w500${poster_path}`}\n                media=\"(min-width: 1024px)\"\n              />\n              <source\n                srcSet={`https://themoviedb.org/t/p/w342${poster_path}`}\n                media=\"(min-width: 768px)\"\n              />\n              <img\n                alt={original_title}\n                className={styles.itemImage}\n                loading=\"lazy\"\n                src={`https://themoviedb.org/t/p/w342${poster_path}`}\n              />\n            </picture>\n          ) : (\n            <img\n              className={styles.itemImage}\n              src={commonImage}\n              alt=\"no poster\"\n              loading=\"lazy\"\n            />\n          )}\n        </div>\n        <div className={styles.title}>\n          <h3 className={styles.title}>{original_title}</h3>\n        </div>\n      </Link>\n    </li>\n  );\n};\n\nMovieItem.propTypes = {\n  item: propTypes.objectOf(\n    propTypes.shape({\n      id: propTypes.number.isRequired,\n      original_title: propTypes.string.isRequired,\n      poster_path: propTypes.string.isRequired,\n    })\n  ),\n};\n","import styles from './MovieList.module.css';\nimport propTypes from 'prop-types';\nimport { MovieItem } from './MovieItem';\n\nexport const MovieList = ({ movies }) => {\n  return (\n    <ul className={styles.movieList}>\n      {movies.map(item => (\n        <MovieItem movie={item} />\n      ))}\n    </ul>\n  );\n};\nMovieList.propTypes = {\n  movies: propTypes.arrayOf(\n    propTypes.shape({\n      item: propTypes.object.isRequired,\n    })\n  ),\n};\n","import styles from './HomePage.module.css';\n\nimport { Container } from '../../components/Container/Container';\nimport { MovieList } from '../../components/MovieList';\nimport { useState, useEffect } from 'react';\nimport MovieAPI from '../../services/serviceApi';\n\nimport { Notify } from 'notiflix';\nimport ImageLoader from '../../components/UI/Loader/Loader';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst HomePage = () => {\n  const [trendingMovies, setTrendingMovie] = useState([]);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setStatus(Status.PENDING);\n    fetchMovies();\n  }, []);\n\n  const fetchMovies = () => {\n    MovieAPI.fetchTrendsMovies()\n      .then(({ results }) => {\n        console.log(results);\n        const composedMovieData = results.map(\n          ({ id, original_title, poster_path, backdrop_path }) => ({\n            id,\n            original_title,\n            poster_path,\n            backdrop_path,\n          })\n        );\n        setTrendingMovie(composedMovieData);\n        setStatus(Status.RESOLVED);\n      })\n      .catch(error => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      });\n  };\n\n  return (\n    <Container>\n      {status === 'pending' ? <ImageLoader /> : null}\n      {status === 'rejected' ? Notify.warning(`${error.message}`) : null}\n      {status === 'resolved' ? <MovieList movies={trendingMovies} /> : null}\n    </Container>\n  );\n};\nexport default HomePage;\n","export const apiSettings = {\n  API_KEY: 'eb148ce88b4706c0ea240b2da392d66f',\n  BASE_URL: 'https://api.themoviedb.org/3',\n};\n","import { apiSettings } from './settings';\nimport { Notify } from 'notiflix';\n\nconst { BASE_URL, API_KEY } = apiSettings;\n\nconst fetchSearchMovies = async (query, currentPage) => {\n  const response = await fetch(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}&page=${currentPage}`\n  );\n\n  if (response.ok) {\n    return response.json();\n  }\n  return Notify.failure(`Sorry, but not found movie like ${query}`);\n};\nconst fetchTrendsMovies = async () => {\n  const response = await fetch(\n    `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`\n  );\n  if (response.ok) {\n    return response.json();\n  }\n};\nconst fetchMovieById = async id => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  if (response.ok) {\n    return response.json();\n  }\n};\n\nconst fetchCastMovie = async id => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  if (response.ok) {\n    return response.json();\n  }\n  return Notify.failure('Oops, an error occurred');\n};\n\nconst fetchReviewsMovies = async id => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  if (response.ok) {\n    return response.json();\n  }\n  return Notify.failure('Oops, an error occurred');\n};\nexport const fetchMovieDetails = async id => {\n  const response = await fetch(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n  if (response.ok) {\n    return response.json();\n  }\n  return Notify.failure('Oops, an error occurred');\n};\n\nconst api = {\n  fetchSearchMovies,\n  fetchTrendsMovies,\n  fetchMovieById,\n  fetchMovieDetails,\n  fetchReviewsMovies,\n  fetchCastMovie,\n};\n\nexport default api;\n"],"names":["MovieItem","movie","location","useLocation","id","poster_path","original_title","className","styles","to","state","from","srcSet","media","alt","loading","src","commonImage","MovieList","movies","map","item","Status","useState","trendingMovies","setTrendingMovie","status","setStatus","error","setError","useEffect","fetchMovies","MovieAPI","then","results","console","log","composedMovieData","backdrop_path","catch","Container","Notify","message","apiSettings","BASE_URL","API_KEY","fetchSearchMovies","query","currentPage","fetch","response","ok","json","fetchTrendsMovies","fetchMovieById","fetchCastMovie","fetchReviewsMovies","fetchMovieDetails"],"sourceRoot":""}