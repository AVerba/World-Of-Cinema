{"version":3,"file":"static/js/395.d4991316.chunk.js","mappings":"+LACA,EAA2B,uB,kBCA3B,GAAgB,SAAW,2BAA2B,MAAQ,yB,SCGjDA,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBC,EAAsCD,EAAtCC,GAAIC,EAAkCF,EAAlCE,KAAMC,EAA4BH,EAA5BG,UAAWC,EAAiBJ,EAAjBI,aAC7B,OACE,gBAAIC,UAAWC,EAAAA,SAAf,UACGF,GACC,gBACEC,UAAWC,EAAAA,MACXC,IAAG,yCAAoCH,GACvCI,IAAKN,KAGP,gBAAKG,UAAWC,EAAAA,MAAcC,I,69TAAcC,IAAKN,KAGnD,eAAIG,UAAWC,EAAAA,KAAf,SAA6BJ,KAC7B,cAAGG,UAAWC,EAAAA,UAAd,SAAiCH,MAZEF,I,2BCEnCQ,EACE,OADFA,EAEK,UAFLA,EAGM,WAHNA,EAIM,WAiDZ,EA9Ca,SAAC,GAAY,IAAVR,EAAS,EAATA,GACd,GAAwBS,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAASD,GAArC,eAAOI,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACRC,EAAWjB,KACV,CAACA,IACJ,IAAMiB,EAAa,SAAAjB,GACjBa,EAAUL,GACVU,EAAAA,EAAAA,eACkBlB,GACfmB,MAAK,YAAe,IAAZT,EAAW,EAAXA,KACPC,EAAQD,GACRG,EAAUL,GACVY,QAAQC,IAAIrB,GACZoB,QAAQC,IAAIX,MAEbY,OAAM,SAAAR,GACLC,EAASD,GACTD,EAAUL,OAGhB,OACE,gCACc,YAAXI,GAAuB,SAAC,IAAD,IAAkB,KAC9B,aAAXA,EAAwBW,EAAAA,OAAAA,QAAA,UAAkBT,EAAMU,UAAa,KAClD,aAAXZ,GACC,SAACa,EAAA,EAAD,WACE,eAAIrB,UAAWC,EAAf,SACGK,EACCA,EAAKgB,KAAI,SAAA3B,GAAI,OAAI,SAACD,EAAD,CAAUC,KAAMA,QAEjC,gBAAKK,UAAU,YAAf,UACE,4DAKN","sources":["webpack://goit-react-hw-05-movies/./src/pages/Cast/Cast.module.css?cfbb","webpack://goit-react-hw-05-movies/./src/pages/Cast/CastItem/CastItem.module.css?72ab","pages/Cast/CastItem/CastItem.jsx","pages/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__DVXPY\"};","// extracted by mini-css-extract-plugin\nexport default {\"castItem\":\"CastItem_castItem__pKWwh\",\"photo\":\"CastItem_photo__q4Zdz\"};","import styles from './CastItem.module.css';\r\nimport propTypes from 'prop-types';\r\nimport NoPhoto from '../../../components/UI/NoPhoto.png';\r\n\r\nexport const CastItem = ({ item }) => {\r\n  const { id, name, character, profile_path } = item;\r\n  return (\r\n    <li className={styles.castItem} key={id}>\r\n      {profile_path ? (\r\n        <img\r\n          className={styles.photo}\r\n          src={`https://themoviedb.org/t/p/w185${profile_path}`}\r\n          alt={name}\r\n        />\r\n      ) : (\r\n        <img className={styles.photo} src={NoPhoto} alt={name} />\r\n      )}\r\n\r\n      <h3 className={styles.name}>{name}</h3>\r\n      <p className={styles.character}>{character}</p>\r\n    </li>\r\n  );\r\n};\r\nCastItem.propTypes = {\r\n  item: propTypes.objectOf(\r\n    propTypes.shape({\r\n      id: propTypes.number.isRequired,\r\n      name: propTypes.string.isRequired,\r\n      character: propTypes.string.isRequired,\r\n      profile_path: propTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n","import styles from './Cast.module.css';\r\nimport { useState, useEffect } from 'react';\r\nimport movieAPI from '../../services/serviceApi';\r\nimport { CastItem } from './CastItem';\r\nimport { Container } from '../../components/Container/Container';\r\nimport ImageLoader from '../../components/UI/Loader/Loader';\r\nimport { Notify } from 'notiflix';\r\nimport propTypes from 'prop-types';\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nconst Cast = ({ id }) => {\r\n  const [cast, setCast] = useState([]);\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    searchCast(id);\r\n  }, [id]);\r\n  const searchCast = id => {\r\n    setStatus(Status.PENDING);\r\n    movieAPI\r\n      .fetchCastMovie(id)\r\n      .then(({ cast }) => {\r\n        setCast(cast);\r\n        setStatus(Status.RESOLVED);\r\n        console.log(id);\r\n        console.log(cast);\r\n      })\r\n      .catch(error => {\r\n        setError(error);\r\n        setStatus(Status.REJECTED);\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      {status === 'pending' ? <ImageLoader /> : null}\r\n      {status === 'rejected' ? Notify.warning(`${error.message}`) : null}\r\n      {status === 'resolved' ? (\r\n        <Container>\r\n          <ul className={styles.castList}>\r\n            {cast ? (\r\n              cast.map(item => <CastItem item={item} />)\r\n            ) : (\r\n              <div className=\"noCredits\">\r\n                <p>Sorry no credits available</p>\r\n              </div>\r\n            )}\r\n          </ul>\r\n        </Container>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\nCast.propTypes = {\r\n  id: propTypes.number.isRequired,\r\n};\r\nexport default Cast;\r\n"],"names":["CastItem","item","id","name","character","profile_path","className","styles","src","alt","Status","useState","cast","setCast","status","setStatus","error","setError","useEffect","searchCast","movieAPI","then","console","log","catch","Notify","message","Container","map"],"sourceRoot":""}