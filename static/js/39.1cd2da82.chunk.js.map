{"version":3,"file":"static/js/39.1cd2da82.chunk.js","mappings":"6LACA,EAA8B,6B,kBCA9B,GAAgB,WAAa,+BAA+B,SAAW,6BAA6B,OAAS,4B,gnHCGhGA,EAAa,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC3BC,QAAQC,IAAIF,GACZ,IAAQG,EAAgCH,EAAhCG,GAAIC,EAA4BJ,EAA5BI,eAAgBC,EAAYL,EAAZK,QACpBC,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KAMrB,OACE,gBAAIC,UAAWC,EAAAA,WAAf,WACE,iBAAKD,UAAWC,EAAAA,SAAhB,UACGH,GACC,gBACEE,UAAWC,EAAAA,OACXC,IAAG,yCAAoCJ,GACvCK,IAAKJ,EACLK,QAbY,SAAAC,GACpBZ,QAAQC,IAAI,aACZW,EAAMC,OAAOJ,IAAMK,MAcb,gBAAKP,UAAWC,EAAAA,OAAeC,IAAKK,EAASJ,IAAKJ,IAEnDA,GACC,eAAIC,UAAWC,EAAAA,KAAf,SAA6BF,KAE7B,eAAIC,UAAWC,EAAAA,KAAf,2BAIJ,cAAGD,UAAWC,EAAAA,OAAd,SAA8BJ,MAnBOF,I,2BCLrCa,EACE,OADFA,EAEK,UAFLA,EAGM,WAHNA,EAIM,WAkDZ,EA/CgB,SAAC,GAAY,IAAVb,EAAS,EAATA,GACjB,GAA8Bc,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAASD,GAArC,eAAOI,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACRC,EAActB,GACdkB,EAAUL,KACT,CAACb,IACJ,IAAMsB,EAAgB,SAAAtB,GACpBuB,EAAAA,EAAAA,mBACsBvB,GACnBwB,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACPT,EAAWS,GACXP,EAAUL,GACVf,QAAQC,IAAIC,GACZF,QAAQC,IAAI0B,MAEbC,OAAM,SAAAP,GACLC,EAASD,GACTD,EAAUL,OAGhB,OACE,gCACc,YAAXI,GAAuB,SAAC,IAAD,IAAkB,KAC9B,aAAXA,EAAwBU,EAAAA,OAAAA,QAAA,UAAkBR,EAAMS,UAAa,KAClD,aAAXX,GACC,SAACY,EAAA,EAAD,WACE,eAAIxB,UAAWC,EAAf,SACGS,EACCA,EAAQe,KAAI,SAAAjC,GAAI,OAAI,SAACD,EAAD,CAAYC,KAAMA,QAEtC,gBAAKQ,UAAU,YAAf,UAEE,4DAKN","sources":["webpack://goit-react-hw-05-movies/./src/pages/Reviews/Reviews.module.css?9a3e","webpack://goit-react-hw-05-movies/./src/pages/Reviews/ReviewItem/ReviewItem.module.css?5c88","pages/Reviews/ReviewItem/ReviewItem.jsx","pages/Reviews/Reviews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewsList\":\"Reviews_reviewsList__ARYCQ\"};","// extracted by mini-css-extract-plugin\nexport default {\"reviewItem\":\"ReviewItem_reviewItem__Dp0SE\",\"userInfo\":\"ReviewItem_userInfo__hlH9-\",\"avatar\":\"ReviewItem_avatar__MqASv\"};","import styles from './ReviewItem.module.css';\r\nimport propTypes from 'prop-types';\r\nimport NoPhoto from '../../../components/UI/commonUser.png';\r\n\r\nexport const ReviewItem = ({ item }) => {\r\n  console.log(item);\r\n  const { id, author_details, content } = item;\r\n  const { avatar_path, name } = author_details;\r\n  const addDefaultSrc = event => {\r\n    console.log('image 404');\r\n    event.target.src = NoPhoto;\r\n  };\r\n\r\n  return (\r\n    <li className={styles.reviewItem} key={id}>\r\n      <div className={styles.userInfo}>\r\n        {avatar_path ? (\r\n          <img\r\n            className={styles.avatar}\r\n            src={`https://themoviedb.org/t/p/w185${avatar_path}`}\r\n            alt={name}\r\n            onError={addDefaultSrc}\r\n          />\r\n        ) : (\r\n          <img className={styles.avatar} src={NoPhoto} alt={name} />\r\n        )}\r\n        {name ? (\r\n          <h4 className={styles.name}>{name}</h4>\r\n        ) : (\r\n          <h4 className={styles.name}>Anonymous</h4>\r\n        )}\r\n      </div>\r\n\r\n      <p className={styles.review}>{content}</p>\r\n    </li>\r\n  );\r\n};\r\nReviewItem.propTypes = {\r\n  item: propTypes.objectOf(\r\n    propTypes.shape({\r\n      id: propTypes.number.isRequired,\r\n      author_details: propTypes.object.isRequired,\r\n      content: propTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n","import styles from './Reviews.module.css';\r\nimport { useState, useEffect } from 'react';\r\nimport movieAPI from '../../services/serviceApi';\r\nimport { ReviewItem } from './ReviewItem';\r\nimport { Container } from '../../components/Container/Container';\r\nimport ImageLoader from '../../components/UI/Loader/Loader';\r\nimport { Notify } from 'notiflix';\r\nimport propTypes from 'prop-types';\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nconst Reviews = ({ id }) => {\r\n  const [reviews, setReviews] = useState([]);\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    searchReviews(id);\r\n    setStatus(Status.PENDING);\r\n  }, [id]);\r\n  const searchReviews = id => {\r\n    movieAPI\r\n      .fetchReviewsMovies(id)\r\n      .then(({ results }) => {\r\n        setReviews(results);\r\n        setStatus(Status.RESOLVED);\r\n        console.log(id);\r\n        console.log(results);\r\n      })\r\n      .catch(error => {\r\n        setError(error);\r\n        setStatus(Status.REJECTED);\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      {status === 'pending' ? <ImageLoader /> : null}\r\n      {status === 'rejected' ? Notify.warning(`${error.message}`) : null}\r\n      {status === 'resolved' ? (\r\n        <Container>\r\n          <ul className={styles.reviewsList}>\r\n            {reviews ? (\r\n              reviews.map(item => <ReviewItem item={item} />)\r\n            ) : (\r\n              <div className=\"noReviews\">\r\n                {/*<img width=\"180px\" src={noCredits} alt=\"no credits\" />*/}\r\n                <p>Sorry no credits available</p>\r\n              </div>\r\n            )}\r\n          </ul>\r\n        </Container>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\nReviews.propTypes = {\r\n  id: propTypes.number.isRequired,\r\n};\r\nexport default Reviews;\r\n"],"names":["ReviewItem","item","console","log","id","author_details","content","avatar_path","name","className","styles","src","alt","onError","event","target","NoPhoto","Status","useState","reviews","setReviews","status","setStatus","error","setError","useEffect","searchReviews","movieAPI","then","results","catch","Notify","message","Container","map"],"sourceRoot":""}