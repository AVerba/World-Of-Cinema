{"version":3,"file":"static/js/349.c42402cf.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/UI/BackButton/BackButton.module.css?fff5","components/UI/BackButton/BackButton.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieDetail/MovieDetail.module.css?2e96","components/MovieDetail/MovieDetail.jsx","webpack://goit-react-hw-05-movies/./src/components/DitailNavigation/DetailNavigation.module.css?856a","components/DitailNavigation/DitailNavigation.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","services/settings.js","services/serviceApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backBtn\":\"BackButton_backBtn__Tu6Ly\"};","import { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { Container } from '../../Container/Container';\r\nimport styles from './BackButton.module.css';\r\n\r\nexport const BackButton = () => {\r\n  const navigate = useNavigate();\r\n  const { state } = useLocation();\r\n\r\n  const [from, setFrom] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (state?.from) {\r\n      const { pathname, search } = state.from;\r\n      setFrom(`${pathname}${search}`);\r\n    }\r\n  }, [state?.from]);\r\n\r\n  const handleBack = () => navigate(from);\r\n\r\n  return (\r\n    <Container>\r\n      <button\r\n        className={styles.backBtn}\r\n        title=\"Back\"\r\n        onClick={handleBack}\r\n        type=\"button\"\r\n      >\r\n        Back\r\n      </button>\r\n    </Container>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"movieDetail\":\"MovieDetail_movieDetail__ZxgN6\",\"imageTumb\":\"MovieDetail_imageTumb__xI8Xr\",\"poster\":\"MovieDetail_poster__oSH+b\",\"infoTumb\":\"MovieDetail_infoTumb__KwuwP\"};","import { Container } from '../Container/Container';\nimport commonImage from '../UI/commonImage.png';\nimport styles from './MovieDetail.module.css';\nimport propTypes from 'prop-types';\n\nexport const MovieDetails = ({\n  poster,\n  title,\n  genres,\n  overview,\n  vote,\n  backdrop,\n}) => {\n  const commonGenres = [];\n  genres.map(item => {\n    commonGenres.push(item.name);\n  });\n\n  return (\n    <Container>\n      <div\n        className={styles.movieDetail}\n        style={{\n          backgroundImage: `linear-gradient(90deg, rgba(0,0,0,1) 19%, rgba(113,69,69,0.5441526952577906) 50%, rgba(252,176,69,0.009138689655549759) 100%), url(\"https://themoviedb.org/t/p/w1280${backdrop}\")`,\n        }}\n      >\n        <div className={styles.imageTumb}>\n          {poster !== null ? (\n            <picture>\n              <source\n                srcSet={`https://themoviedb.org/t/p/w500${poster}`}\n                media=\"(min-width: 1024px)\"\n              />\n              <source\n                srcSet={`https://themoviedb.org/t/p/w342${poster}`}\n                media=\"(min-width: 768px)\"\n              />\n              <img\n                alt={title}\n                className={styles.poster}\n                loading=\"lazy\"\n                src={`https://themoviedb.org/t/p/w342${poster}`}\n              />\n            </picture>\n          ) : (\n            <img src={commonImage} alt=\"no poster\" loading=\"lazy\" />\n          )}\n        </div>\n        <div className={styles.infoTumb}>\n          <h1>{title}</h1>\n          <h2>Votes</h2>\n          <h4>{vote}</h4>\n\n          <h2>Genres</h2>\n          <h4>{commonGenres.join(', ')}</h4>\n\n          <h2>Overview</h2>\n          <p>{overview}</p>\n        </div>\n      </div>\n    </Container>\n  );\n};\nMovieDetails.propTypes = {\n  genres: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.number.isRequired,\n      name: propTypes.string.isRequired,\n    })\n  ),\n  title: propTypes.string.isRequired,\n  overview: propTypes.string.isRequired,\n  poster: propTypes.string,\n  vote: propTypes.number.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"navList\":\"DetailNavigation_navList__MW3Xj\",\"navItem\":\"DetailNavigation_navItem__kQviO\",\"navlink\":\"DetailNavigation_navlink__cOuDl\",\"activeLink\":\"DetailNavigation_activeLink__ex7LE\",\"navLink\":\"DetailNavigation_navLink__caOSv\"};","import styles from './DetailNavigation.module.css';\nimport { NavLink } from 'react-router-dom';\nimport { Container } from '../Container/Container';\nimport propTypes from 'prop-types';\n\nexport const DetailNavigation = ({ id }) => {\n  return (\n    <Container>\n      <ul className={styles.navList}>\n        <li className={styles.navItem}>\n          <NavLink\n            className={({ isActive }) =>\n              isActive\n                ? ['active', styles.activeLink].join(' ')\n                : styles.navlink\n            }\n            to={`/movies/${id}/cast`}\n          >\n            Cast\n          </NavLink>\n        </li>\n        <li className={styles.navItem}>\n          <NavLink\n            className={({ isActive }) =>\n              isActive\n                ? ['active', styles.activeLink].join(' ')\n                : styles.navlink\n            }\n            to={`/movies/${id}/reviews`}\n          >\n            Reviews\n          </NavLink>\n        </li>\n      </ul>\n    </Container>\n  );\n};\nDetailNavigation.propTypes = {\n  id: propTypes.string.isRequired,\n};\n","import styles from './MovieDetailsPage.module.css';\n\nimport { useState, useEffect } from 'react';\nimport { Routes, Route, Outlet, useParams } from 'react-router-dom';\nimport { BackButton } from '../../components/UI/BackButton';\nimport movieAPI from '../../services/serviceApi';\nimport { MovieDetails } from '../../components/MovieDetail';\n// import { Reviews } from '../Reviews';\n// import { Cast } from '../Cast';\nimport { lazy, Suspense } from 'react';\nimport { DetailNavigation } from '../../components/DitailNavigation';\nimport { Loading as loading, Notify } from 'notiflix';\nimport ImageLoader from '../../components/UI/Loader/Loader';\n\nconst Cast = lazy(() => import('../Cast/Cast'));\nconst Reviews = lazy(() => import('../Reviews/Reviews'));\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst MovieDetailsPage = () => {\n  const { movieID } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    searchMovieDetails(movieID);\n    setStatus(Status.PENDING);\n  }, [movieID]);\n\n  const searchMovieDetails = movieID => {\n    movieAPI\n      .fetchMovieDetails(movieID)\n      .then(results => {\n        setMovieDetails(results);\n        setStatus(Status.RESOLVED);\n      })\n      .catch(error => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      });\n  };\n\n  return (\n    <>\n      {status === 'pending' ? <ImageLoader /> : null}\n      {status === 'rejected' ? Notify.warning(`${error.message}`) : null}\n      {status === 'resolved' ? (\n        <>\n          <BackButton />\n          {movieDetails && (\n            <MovieDetails\n              poster={movieDetails.poster_path}\n              title={movieDetails.title}\n              genres={movieDetails.genres}\n              overview={movieDetails.overview}\n              vote={movieDetails.vote_average}\n              backdrop={movieDetails.backdrop_path}\n            />\n          )}\n\n          <DetailNavigation id={movieID} />\n        </>\n      ) : null}\n      <Suspense fallback={<ImageLoader />}>\n        <Routes>\n          <Route path=\"/\" element={<Outlet />}>\n            <Route path=\"cast\" element={<Cast />} />\n            <Route path=\"reviews\" element={<Reviews />} />\n          </Route>\n        </Routes>\n      </Suspense>\n    </>\n  );\n};\nexport default MovieDetailsPage;\n","export const apiSettings = {\n  API_KEY: 'eb148ce88b4706c0ea240b2da392d66f',\n  BASE_URL: 'https://api.themoviedb.org/3',\n};\n","import { apiSettings } from './settings';\nimport { Notify } from 'notiflix';\n\nconst { BASE_URL, API_KEY } = apiSettings;\n\nconst fetchSearchMovies = async (query, currentPage) => {\n  const response = await fetch(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}&page=${currentPage}`\n  );\n\n  if (response.ok) {\n    return response.json();\n  }\n  return Notify.failure(`Sorry, but not found movie like ${query}`);\n};\nconst fetchTrendsMovies = async () => {\n  const response = await fetch(\n    `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`\n  );\n  if (response.ok) {\n    return response.json();\n  }\n};\nconst fetchMovieById = async id => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  if (response.ok) {\n    return response.json();\n  }\n};\n\nconst fetchCastMovie = async id => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  if (response.ok) {\n    return response.json();\n  }\n  return Notify.failure('Oops, an error occurred');\n};\n\nconst fetchReviewsMovies = async id => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  if (response.ok) {\n    return response.json();\n  }\n  return Notify.failure('Oops, an error occurred');\n};\nexport const fetchMovieDetails = async id => {\n  const response = await fetch(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n  if (response.ok) {\n    return response.json();\n  }\n  return Notify.failure('Oops, an error occurred');\n};\n\nconst api = {\n  fetchSearchMovies,\n  fetchTrendsMovies,\n  fetchMovieById,\n  fetchMovieDetails,\n  fetchReviewsMovies,\n  fetchCastMovie,\n};\n\nexport default api;\n"],"names":["BackButton","navigate","useNavigate","state","useLocation","useState","from","setFrom","useEffect","pathname","search","Container","className","styles","title","onClick","type","MovieDetails","poster","genres","overview","vote","backdrop","commonGenres","map","item","push","name","style","backgroundImage","srcSet","media","alt","loading","src","commonImage","join","DetailNavigation","id","isActive","to","Cast","lazy","Reviews","Status","movieID","useParams","movieDetails","setMovieDetails","status","setStatus","error","setError","searchMovieDetails","movieAPI","then","results","catch","Notify","message","poster_path","vote_average","backdrop_path","Suspense","fallback","path","element","apiSettings","BASE_URL","API_KEY","fetchSearchMovies","query","currentPage","fetch","response","ok","json","fetchTrendsMovies","fetchMovieById","fetchCastMovie","fetchReviewsMovies","fetchMovieDetails"],"sourceRoot":""}