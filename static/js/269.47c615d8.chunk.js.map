{"version":3,"file":"static/js/269.47c615d8.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieItem/MovieItem.module.css?427c","components/MovieList/MovieItem/MovieItem.jsx","components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","pages/MoviePage/MoviePage.jsx","services/settings.js","services/serviceApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MovieList_movieList__my-cM\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MovieItem_item__2i96U\",\"link\":\"MovieItem_link__aU3NQ\",\"title\":\"MovieItem_title__VyjTF\",\"itemImage\":\"MovieItem_itemImage__Z3Jes\"};","import styles from './MovieItem.module.css';\nimport propTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport commonImage from '../../UI/commonImage.png';\n\nexport const MovieItem = ({ movie }) => {\n  const location = useLocation();\n  const { id, poster_path, original_title } = movie;\n\n  return (\n    <li className={styles.item}>\n      <Link\n        to={`/movies/${id}`}\n        state={{ from: location }}\n        className={styles.link}\n      >\n        <div className={styles.poster}>\n          {poster_path !== null ? (\n            <picture>\n              <source\n                srcSet={`https://themoviedb.org/t/p/w500${poster_path}`}\n                media=\"(min-width: 1024px)\"\n              />\n              <source\n                srcSet={`https://themoviedb.org/t/p/w342${poster_path}`}\n                media=\"(min-width: 768px)\"\n              />\n              <img\n                alt={original_title}\n                className={styles.itemImage}\n                loading=\"lazy\"\n                src={`https://themoviedb.org/t/p/w342${poster_path}`}\n              />\n            </picture>\n          ) : (\n            <img\n              className={styles.itemImage}\n              src={commonImage}\n              alt=\"no poster\"\n              loading=\"lazy\"\n            />\n          )}\n        </div>\n        <div className={styles.title}>\n          <h3 className={styles.title}>{original_title}</h3>\n        </div>\n      </Link>\n    </li>\n  );\n};\n\n// MovieItem.propTypes = {\n//   id: propTypes.number.isRequired,\n//   title: propTypes.string.isRequired,\n//   img: propTypes.string.isRequired,\n// };\n","import styles from './MovieList.module.css';\nimport propTypes from 'prop-types';\nimport { MovieItem } from './MovieItem';\n\nexport const MovieList = ({ movies }) => {\n  return (\n    <ul className={styles.movieList}>\n      {movies.map(item => (\n        <MovieItem movie={item} />\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"SearchBar\":\"SearchBar_SearchBar__q2sB9\",\"SearchForm\":\"SearchBar_SearchForm__4Mcy1\",\"searchBtn\":\"SearchBar_searchBtn__HgyPZ\",\"searchBtnLabel\":\"SearchBar_searchBtnLabel__GJOyo\",\"searchInput\":\"SearchBar_searchInput__v-aOh\"};","import { useState } from 'react';\nimport styles from './SearchBar.module.css';\nimport PropTypes from 'prop-types';\nimport { Notify } from 'notiflix';\n\nexport const SearchBar = ({ onSubmit }) => {\n  const [searchQuery, setSetSearchQuery] = useState('');\n\n  const searchSubmitHandler = event => {\n    event.preventDefault();\n    if (searchQuery.trim() === '') {\n      return Notify.warning(`Please enter a search query`);\n    }\n    onSubmit(searchQuery);\n  };\n  const changeNameHandler = event => {\n    setSetSearchQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  return (\n    <div className={styles.SearchBar}>\n      <form onSubmit={searchSubmitHandler} className={styles.SearchForm}>\n        <button type=\"submit\" className={styles.searchBtn}>\n          <span className={styles.searchBtnLabel}>Search</span>\n        </button>\n        <input\n          type=\"text\"\n          name=\"searchQuery\"\n          autoComplete=\"off\"\n          placeholder=\"Search movies\"\n          className={styles.searchInput}\n          value={searchQuery}\n          onChange={changeNameHandler}\n        />\n      </form>\n    </div>\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styles from './MoviePage.module.css';\r\nimport propTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\nimport { SearchBar } from '../../components/SearchBar';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nimport { lazy, Suspense } from 'react';\r\n\r\nimport { MovieList } from '../../components/MovieList';\r\nimport movieAPI from '../../services/serviceApi';\r\nimport { Container } from '../../components/Container/Container';\r\nimport ImageLoader from '../../components/UI/Loader/Loader';\r\nimport { Notify } from 'notiflix';\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nconst MoviePage = () => {\r\n  const [searchParam, setSearchParams] = useSearchParams({});\r\n  const [query, setSetSearchQuery] = useState(searchParam.get('query') ?? '');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (query) {\r\n      searchMovie(query);\r\n      // setStatus(Status.PENDING);\r\n    }\r\n  }, [query]);\r\n\r\n  useEffect(() => {\r\n    setSearchParams({ query });\r\n  }, [query, setSearchParams]);\r\n  const searchMovie = () => {\r\n    movieAPI\r\n      .fetchSearchMovies(query)\r\n      .then(({ results }) => {\r\n        setStatus(Status.RESOLVED);\r\n        setSearchResults(results);\r\n      })\r\n      .catch(error => {\r\n        setError(error);\r\n        setStatus(Status.REJECTED);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <SearchBar onSubmit={setSetSearchQuery} />\r\n      {status === 'pending' ? <ImageLoader /> : null}\r\n      {status === 'rejected' ? Notify.warning(`${error.message}`) : null}\r\n      {status === 'resolved' ? <MovieList movies={searchResults} /> : null}\r\n    </Container>\r\n  );\r\n};\r\nexport default MoviePage;\r\n","export const apiSettings = {\n  API_KEY: 'eb148ce88b4706c0ea240b2da392d66f',\n  BASE_URL: 'https://api.themoviedb.org/3',\n};\n","import { apiSettings } from './settings';\nimport { Notify } from 'notiflix';\n\nconst { BASE_URL, API_KEY } = apiSettings;\n\nconst fetchSearchMovies = async query => {\n  const response = await fetch(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}&page=${1}`\n  );\n\n  if (response.ok) {\n    return response.json();\n  }\n  return Notify.failure(`Sorry, but not found movie like ${query}`);\n};\nconst fetchTrendsMovies = async () => {\n  const response = await fetch(\n    `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`\n  );\n  if (response.ok) {\n    return response.json();\n  }\n};\nconst fetchMovieById = async id => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  if (response.ok) {\n    return response.json();\n  }\n};\n\nconst fetchCastMovie = async id => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  if (response.ok) {\n    return response.json();\n  }\n  return Notify.failure('Oops, an error occurred');\n};\n\nconst fetchReviewsMovies = async id => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  if (response.ok) {\n    return response.json();\n  }\n  return Notify.failure('Oops, an error occurred');\n};\nexport const fetchMovieDetails = async id => {\n  const response = await fetch(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n  if (response.ok) {\n    return response.json();\n  }\n  return Notify.failure('Oops, an error occurred');\n};\n\nconst api = {\n  fetchSearchMovies,\n  fetchTrendsMovies,\n  fetchMovieById,\n  fetchMovieDetails,\n  fetchReviewsMovies,\n  fetchCastMovie,\n};\n\nexport default api;\n"],"names":["MovieItem","movie","location","useLocation","id","poster_path","original_title","className","styles","to","state","from","srcSet","media","alt","loading","src","commonImage","MovieList","movies","map","item","SearchBar","onSubmit","useState","searchQuery","setSetSearchQuery","event","preventDefault","trim","Notify","type","name","autoComplete","placeholder","value","onChange","currentTarget","toLowerCase","Status","useSearchParams","searchParam","setSearchParams","get","query","searchResults","setSearchResults","status","setStatus","error","setError","useEffect","searchMovie","movieAPI","then","results","catch","Container","message","apiSettings","BASE_URL","API_KEY","fetchSearchMovies","fetch","response","ok","json","fetchTrendsMovies","fetchMovieById","fetchCastMovie","fetchReviewsMovies","fetchMovieDetails"],"sourceRoot":""}